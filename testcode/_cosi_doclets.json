[
    {
        "comment": "/**\n * @event FeaturesLoader#RadioTriggerDistrictsLoaded\n * @description Triggered when datasets of selectedDistricts are loaded\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerDistrictsLoaded",
        "description": "Triggered when datasets of selectedDistricts are loaded",
        "memberof": "FeaturesLoader",
        "longname": "FeaturesLoader#event:RadioTriggerDistrictsLoaded",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event FeaturesLoader#RadioRequestGetDistrictsByScope\n* @description  returns the district features\n* @param {string} scope - scope of districts, \"Stadtteile\" or \"Statistische Gebiete\"\n* @example Radio.request(\"FeaturesLoader\", \"getDistrictsByScope\", scope)\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestGetDistrictsByScope",
        "description": "returns the district features",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "scope of districts, \"Stadtteile\" or \"Statistische Gebiete\"",
                "name": "scope"
            }
        ],
        "examples": [
            "Radio.request(\"FeaturesLoader\", \"getDistrictsByScope\", scope)"
        ],
        "memberof": "FeaturesLoader",
        "longname": "FeaturesLoader#event:RadioRequestGetDistrictsByScope",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event FeaturesLoader#RadioRequestGetDistrictsByValue\n* @description returns district features by a value\n* @param {string} scope - scope of districts, \"Stadtteile\" or \"Statistische Gebiete\"\n* @param {string} value - the value to be filtered by\n* @example Radio.request(\"FeaturesLoader\", \"getDistrictsByValue\", scope, value)\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestGetDistrictsByValue",
        "description": "returns district features by a value",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "scope of districts, \"Stadtteile\" or \"Statistische Gebiete\"",
                "name": "scope"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "the value to be filtered by",
                "name": "value"
            }
        ],
        "examples": [
            "Radio.request(\"FeaturesLoader\", \"getDistrictsByValue\", scope, value)"
        ],
        "memberof": "FeaturesLoader",
        "longname": "FeaturesLoader#event:RadioRequestGetDistrictsByValue",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event FeaturesLoader#RadioRequestGetAllFeaturesByAttribute\n* @description returns all features of a layer. If the features are not yet stored, it will be loaded\n* @param {object} obj - key value pair of a layer attribute\n* @example Radio.request(\"FeaturesLoader\", \"getAllFeaturesByAttribute\", obj)\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestGetAllFeaturesByAttribute",
        "description": "returns all features of a layer. If the features are not yet stored, it will be loaded",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "key value pair of a layer attribute",
                "name": "obj"
            }
        ],
        "examples": [
            "Radio.request(\"FeaturesLoader\", \"getAllFeaturesByAttribute\", obj)"
        ],
        "memberof": "FeaturesLoader",
        "longname": "FeaturesLoader#event:RadioRequestGetAllFeaturesByAttribute",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event FeaturesLoader#RadioRequestFeaturesLoaderGetAllValuesByScope\n* @description get all mapped data layer infos by scope\n* @param {string} scope - scope of districts, \"Stadtteile\" or \"Statistische Gebiete\"\n* @example Radio.request(\"FeaturesLoader\", \"getAllValuesByScope\", scope)\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestFeaturesLoaderGetAllValuesByScope",
        "description": "get all mapped data layer infos by scope",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "scope of districts, \"Stadtteile\" or \"Statistische Gebiete\"",
                "name": "scope"
            }
        ],
        "examples": [
            "Radio.request(\"FeaturesLoader\", \"getAllValuesByScope\", scope)"
        ],
        "memberof": "FeaturesLoader",
        "longname": "FeaturesLoader#event:RadioRequestFeaturesLoaderGetAllValuesByScope",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.CompareDistricts#RadioTriggerCompareDistrictsSelectRefDistrict\n * @description trigged when reference district drop-down selector is changed\n * @example  Radio.trigger(\"CompareDistricts\", \"selectRefDistrict\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerCompareDistrictsSelectRefDistrict",
        "description": "trigged when reference district drop-down selector is changed",
        "examples": [
            "Radio.trigger(\"CompareDistricts\", \"selectRefDistrict\");"
        ],
        "memberof": "Tools.CompareDistricts",
        "longname": "Tools.CompareDistricts#event:RadioTriggerCompareDistrictsSelectRefDistrict",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.CompareDistricts#RadioTriggerCompareDistrictsCloseFilter\n * @description trigged when a layer filter is closed by user\n * @example  Radio.trigger(\"CompareDistricts\", \"closeFilter\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerCompareDistrictsCloseFilter",
        "description": "trigged when a layer filter is closed by user",
        "examples": [
            "Radio.trigger(\"CompareDistricts\", \"closeFilter\");"
        ],
        "memberof": "Tools.CompareDistricts",
        "longname": "Tools.CompareDistricts#event:RadioTriggerCompareDistrictsCloseFilter",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.CompareDistricts#RadioTriggerCompareDistrictsChangeRefValue\n * @description trigged when reference value input changes\n * @example  Radio.trigger(\"CompareDistricts\", \"changeRefValue\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerCompareDistrictsChangeRefValue",
        "description": "trigged when reference value input changes",
        "examples": [
            "Radio.trigger(\"CompareDistricts\", \"changeRefValue\");"
        ],
        "memberof": "Tools.CompareDistricts",
        "longname": "Tools.CompareDistricts#event:RadioTriggerCompareDistrictsChangeRefValue",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event CompareDistrictsModel#changeIsActive\n* @description trigged when isActive changes\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsActive",
        "description": "trigged when isActive changes",
        "memberof": "CompareDistrictsModel",
        "longname": "CompareDistrictsModel#event:changeIsActive",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event CompareDistrictsModel#changeLayerFilterList\n* @description trigged when layerFilterList changes\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 62,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeLayerFilterList",
        "description": "trigged when layerFilterList changes",
        "memberof": "CompareDistrictsModel",
        "longname": "CompareDistrictsModel#event:changeLayerFilterList",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event LayerFilterCollection#Add\n* @description triggered when new model is added to the LayerfilterList\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "Add",
        "description": "triggered when new model is added to the LayerfilterList",
        "memberof": "LayerFilterCollection",
        "longname": "LayerFilterCollection#event:Add",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event LayerFilterCollection#Destroy\n* @description trigged when model is destroyed in LayerFilterList\n*\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 72,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "Destroy",
        "description": "trigged when model is destroyed in LayerFilterList",
        "memberof": "LayerFilterCollection",
        "longname": "LayerFilterCollection#event:Destroy",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event LayerFilterCollection#Change\n* @description trigged when layerFilterList changes\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 78,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "Change",
        "description": "trigged when layerFilterList changes",
        "memberof": "LayerFilterCollection",
        "longname": "LayerFilterCollection#event:Change",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event DistrictSelector#RadioRequestDistrictSelectorGetSelectedDistrict\n * @description returns selected reference district\n * @example  Radio.request(\"DistrictSelector\", \"getSelectedDistrict\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 83,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestDistrictSelectorGetSelectedDistrict",
        "description": "returns selected reference district",
        "examples": [
            "Radio.request(\"DistrictSelector\", \"getSelectedDistrict\");"
        ],
        "memberof": "DistrictSelector",
        "longname": "DistrictSelector#event:RadioRequestDistrictSelectorGetSelectedDistrict",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event OpenRouteService#RadioTriggerCompareDistrictsCloseFilter\n * @description sends request to get Isochrone geoJSON\n * @param {String} pathType - type of transportation\n * @param {Array} coordinates - coordinates of origins\n * @param {Array} rangeArray - array of time range values\n * @example  Radio.request(\"OpenRoute\", \"requestIsochrones\", pathType, coordinates, rangeArray);\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 91,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerCompareDistrictsCloseFilter",
        "description": "sends request to get Isochrone geoJSON",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "type of transportation",
                "name": "pathType"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "coordinates of origins",
                "name": "coordinates"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "array of time range values",
                "name": "rangeArray"
            }
        ],
        "examples": [
            "Radio.request(\"OpenRoute\", \"requestIsochrones\", pathType, coordinates, rangeArray);"
        ],
        "memberof": "OpenRouteService",
        "longname": "OpenRouteService#event:RadioTriggerCompareDistrictsCloseFilter",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event ReachabilityFromPointModel#ChangeCoordinate\n* @description triggered when reference point coordinate changes\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 102,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeCoordinate",
        "description": "triggered when reference point coordinate changes",
        "memberof": "ReachabilityFromPointModel",
        "longname": "ReachabilityFromPointModel#event:ChangeCoordinate",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event ReachabilityFromPointModel#ChangeIsActive\n* @description trigged when IsActive changes\n*/",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 107,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeIsActive",
        "description": "trigged when IsActive changes",
        "memberof": "ReachabilityFromPointModel",
        "longname": "ReachabilityFromPointModel#event:ChangeIsActive",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.SelectDistrict#RadioTriggerSelectDistrictGetSelector\n * @description returns current selector\n * @example  Radio.request(\"SelectDistrict\", \"getSelector\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 114,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSelectDistrictGetSelector",
        "description": "returns current selector",
        "examples": [
            "Radio.request(\"SelectDistrict\", \"getSelector\");"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioTriggerSelectDistrictGetSelector",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.SelectDistrict#RadioTriggerSelectDistrictGetDistrictLayer\n * @description returns 'districtLayer' object\n * @example  Radio.request(\"SelectDistrict\", \"getDistrictLayer\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 121,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSelectDistrictGetDistrictLayer",
        "description": "returns 'districtLayer' object",
        "examples": [
            "Radio.request(\"SelectDistrict\", \"getDistrictLayer\");"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioTriggerSelectDistrictGetDistrictLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.SelectDistrict#RadioTriggerSelectDistrictRevertBboxGeometry\n * @description sets bbox back to selected districts\n * @example  Radio.trigger(\"SelectDistrict\", \"revertBboxGeometry\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 127,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSelectDistrictRevertBboxGeometry",
        "description": "sets bbox back to selected districts",
        "examples": [
            "Radio.trigger(\"SelectDistrict\", \"revertBboxGeometry\");"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioTriggerSelectDistrictRevertBboxGeometry",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.SelectDistrict#RadioTriggerSelectDistrictGetScope\n * @description returns current scope\n * @example  Radio.request(\"SelectDistrict\", \"getScope\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 133,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSelectDistrictGetScope",
        "description": "returns current scope",
        "examples": [
            "Radio.request(\"SelectDistrict\", \"getScope\");"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioTriggerSelectDistrictGetScope",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.SelectDistrict#RadioTriggerZoomToDistrict\n * @description sets viewport to selected districts\n * @param {string} districtName names of selected districts\n * @param {boolean} onlySelected todo\n * @example  Radio.request(\"SelectDistrict\", \"zoomToDistrict\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 139,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerZoomToDistrict",
        "description": "sets viewport to selected districts",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "names of selected districts",
                "name": "districtName"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "todo",
                "name": "onlySelected"
            }
        ],
        "examples": [
            "Radio.request(\"SelectDistrict\", \"zoomToDistrict\");"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioTriggerZoomToDistrict",
        "scope": "instance"
    },
    {
        "comment": "/**\n  * @event Tools.SelectDistrict#RadioRequestSetSelectedDistrictsToFeatures\n  * @description sets features as selected districts\n  * @param {array} features features to be set as selectedDistricts\n  * @example Radio.request(\"SelectDistrict\", \"setSelectedDistrictsToFeatures\", features);\n  */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 147,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestSetSelectedDistrictsToFeatures",
        "description": "sets features as selected districts",
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "features to be set as selectedDistricts",
                "name": "features"
            }
        ],
        "examples": [
            "Radio.request(\"SelectDistrict\", \"setSelectedDistrictsToFeatures\", features);"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioRequestSetSelectedDistrictsToFeatures",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Tools.SelectDistrict#RadioRequestSelectDistrictGetSelectedDistricts\n * @description gets selected districts\n * @example Radio.request(\"SelectDistrict\", \"getSelectedDistricts\");\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 154,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestSelectDistrictGetSelectedDistricts",
        "description": "gets selected districts",
        "examples": [
            "Radio.request(\"SelectDistrict\", \"getSelectedDistricts\");"
        ],
        "memberof": "Tools.SelectDistrict",
        "longname": "Tools.SelectDistrict#event:RadioRequestSelectDistrictGetSelectedDistricts",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event BboxSettor#RadioTriggerSetBboxGeometryToLayer\n * sets the bbox geometry for targeted raw layers or exisiting vector layers\n * @param {Array} itemList - list of target raw layers\n * @param {GeometryCollection} bboxGeometry - target geometry to be set as bbox\n * @example  Radio.trigger(\"BboxSettor\", \"setBboxGeometryToLayer\", itemList, bboxGeometry);\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 162,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "BboxSettor#RadioTriggerSetBboxGeometryToLayer\nsets the bbox geometry for targeted raw layers or exisiting vector layers",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "list of target raw layers",
                "name": "itemList"
            },
            {
                "type": {
                    "names": [
                        "GeometryCollection"
                    ]
                },
                "description": "target geometry to be set as bbox",
                "name": "bboxGeometry"
            }
        ],
        "examples": [
            "Radio.trigger(\"BboxSettor\", \"setBboxGeometryToLayer\", itemList, bboxGeometry);"
        ],
        "longname": "BboxSettor#RadioTriggerSetBboxGeometryToLayer\nsets the bbox geometry for targeted raw layers or exisiting vector layersevent:",
        "scope": "global"
    },
    {
        "comment": "/**\n * @event Dashboard#RadioTriggerDashboardDestroyWidgetById\n * @description destroys widget by Id\n * @param {String} id id of widget\n * @example Radio.trigger(\"Dashboard\", \"destroyWidgetById\", id);\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 170,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerDashboardDestroyWidgetById",
        "description": "destroys widget by Id",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "id of widget",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.trigger(\"Dashboard\", \"destroyWidgetById\", id);"
        ],
        "memberof": "Dashboard",
        "longname": "Dashboard#event:RadioTriggerDashboardDestroyWidgetById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Dashboard#RadioTriggerDashboardAppend\n * @description appends a new widget to the dashboard\n * @param {Backbone.View | object | string} child the child object to append\n * @param {string} parent the container-selector to append to, defaults to \".info-screen-children\"\n * @param {object} opts appending options (optional)\n * @param {boolean} cullButtons remove buttons when appending html to InfoScreen, defaults to false (optional)\n * @example Radio.trigger(\"Dashboard\", \"append\", child, parent = \".info-screen-children\", opts, cullButtons = false);\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 179,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerDashboardAppend",
        "description": "appends a new widget to the dashboard",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.View",
                        "object",
                        "string"
                    ]
                },
                "description": "the child object to append",
                "name": "child"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "the container-selector to append to, defaults to \".info-screen-children\"",
                "name": "parent"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "appending options (optional)",
                "name": "opts"
            },
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                },
                "description": "remove buttons when appending html to InfoScreen, defaults to false (optional)",
                "name": "cullButtons"
            }
        ],
        "examples": [
            "Radio.trigger(\"Dashboard\", \"append\", child, parent = \".info-screen-children\", opts, cullButtons = false);"
        ],
        "memberof": "Dashboard",
        "longname": "Dashboard#event:RadioTriggerDashboardAppend",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Dashboard#RadioTriggerDashboardDestroyWidgetById\n * @description removes a widget from the dashboard by ID\n * @param {String} id the ID of the widget to remove\n * @example Radio.trigger(\"Dashboard\", \"destroyWidgetById\", id);\n */",
        "meta": {
            "filename": "cosi_events.js",
            "lineno": 189,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerDashboardDestroyWidgetById",
        "description": "removes a widget from the dashboard by ID",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "the ID of the widget to remove",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.trigger(\"Dashboard\", \"destroyWidgetById\", id);"
        ],
        "memberof": "Dashboard",
        "longname": "Dashboard#event:RadioTriggerDashboardDestroyWidgetById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @namespace Reachability\n * @memberof Tools\n * @description calculates and displays reachable area and infrastructures from one or more origin\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "Reachability",
        "memberof": "Tools",
        "description": "calculates and displays reachable area and infrastructures from one or more origin",
        "scope": "static",
        "longname": "Tools.Reachability"
    },
    {
        "comment": "/**\n * @namespace ReachabilityInArea\n * @memberof Tools.Reachability\n * @description calculates and displays coverage of certain infrastructure (e.g. daycare center) within an area\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "ReachabilityInArea",
        "memberof": "Tools.Reachability",
        "description": "calculates and displays coverage of certain infrastructure (e.g. daycare center) within an area",
        "scope": "static",
        "longname": "Tools.Reachability.ReachabilityInArea"
    },
    {
        "comment": "/**\n* @namespace ReachabilityFromPoint\n* @memberof Tools.Reachability\n* @description calculates and displays reachable area from a point on map\n*/",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "ReachabilityFromPoint",
        "memberof": "Tools.Reachability",
        "description": "calculates and displays reachable area from a point on map",
        "scope": "static",
        "longname": "Tools.Reachability.ReachabilityFromPoint"
    },
    {
        "comment": "/**\n* @namespace BboxSettor\n* @description tool for setting bounding boxes for map layers\n*/",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "BboxSettor",
        "description": "tool for setting bounding boxes for map layers",
        "longname": "BboxSettor",
        "scope": "global"
    },
    {
        "comment": "/**\n * @namespace CompareDistricts\n * @memberof Tools\n * @description get a set of districts that has comparable data\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "CompareDistricts",
        "memberof": "Tools",
        "description": "get a set of districts that has comparable data",
        "scope": "static",
        "longname": "Tools.CompareDistricts"
    },
    {
        "comment": "/**\n* @namespace ColorCodeMap\n* @description renders map features in the manner of color-code according to feature values\n*/",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "ColorCodeMap",
        "description": "renders map features in the manner of color-code according to feature values",
        "longname": "ColorCodeMap",
        "scope": "global"
    },
    {
        "comment": "/**\n* @namespace LayerFilterSelector\n* @memberof Tools.CompareDistricts\n* @description selector of data layer to filter districts through\n*/",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "LayerFilterSelector",
        "memberof": "Tools.CompareDistricts",
        "description": "selector of data layer to filter districts through",
        "scope": "static",
        "longname": "Tools.CompareDistricts.LayerFilterSelector"
    },
    {
        "comment": "/**\n* @namespace DistrictSelector\n* @memberof Tools.CompareDistricts\n* @description selector of reference district to compare to\n*/",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "DistrictSelector",
        "memberof": "Tools.CompareDistricts",
        "description": "selector of reference district to compare to",
        "scope": "static",
        "longname": "Tools.CompareDistricts.DistrictSelector"
    },
    {
        "comment": "/**\n * @namespace LayerFilter\n * @memberof Tools.CompareDistricts\n * @description detail information and parameters of filter layer\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "LayerFilter",
        "memberof": "Tools.CompareDistricts",
        "description": "detail information and parameters of filter layer",
        "scope": "static",
        "longname": "Tools.CompareDistricts.LayerFilter"
    },
    {
        "comment": "/**\n * @namespace Tolerance\n * @memberof Tools.CompareDistricts.LayerFilter\n * @description upper and lower tolerance of a layer filter\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 57,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "Tolerance",
        "memberof": "Tools.CompareDistricts.LayerFilter",
        "description": "upper and lower tolerance of a layer filter",
        "scope": "static",
        "longname": "Tools.CompareDistricts.LayerFilter.Tolerance"
    },
    {
        "comment": "/**\n * @namespace SelectDistrict\n * @memberof Tools\n * @description select areas to work with (for better performance)\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 63,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "SelectDistrict",
        "memberof": "Tools",
        "description": "select areas to work with (for better performance)",
        "scope": "static",
        "longname": "Tools.SelectDistrict"
    },
    {
        "comment": "/**\n * @namespace CalculateRatio\n * @memberof Tools\n * @description todo\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 69,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "CalculateRatio",
        "memberof": "Tools",
        "description": "todo",
        "scope": "static",
        "longname": "Tools.CalculateRatio"
    },
    {
        "comment": "/**\n * @namespace AdjustParameter\n * @memberof Tools.CalculateRatio\n * @description todo\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 75,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "AdjustParameter",
        "memberof": "Tools.CalculateRatio",
        "description": "todo",
        "scope": "static",
        "longname": "Tools.CalculateRatio.AdjustParameter"
    },
    {
        "comment": "/**\n * @namespace InfoScreen\n * @description Constructs the infoScreen on the 2nd screen and manages communication with the main screen\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 81,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "InfoScreen",
        "description": "Constructs the infoScreen on the 2nd screen and manages communication with the main screen",
        "longname": "InfoScreen",
        "scope": "global"
    },
    {
        "comment": "/**\n * @namespace FeaturesLoader\n * @description load features of different layers and store them as a central bank\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 86,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "FeaturesLoader",
        "description": "load features of different layers and store them as a central bank",
        "longname": "FeaturesLoader",
        "scope": "global"
    },
    {
        "comment": "/**\n * @namespace OpenRouteService\n * @description OpenRouteService functions. (https://openrouteservice.org/)\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 92,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "OpenRouteService",
        "description": "OpenRouteService functions. (https://openrouteservice.org/)",
        "longname": "OpenRouteService",
        "scope": "global"
    },
    {
        "comment": "/**\n * @namespace Dashboard\n * @memberof Tools\n * @description information dashboard\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 97,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "Dashboard",
        "memberof": "Tools",
        "description": "information dashboard",
        "scope": "static",
        "longname": "Tools.Dashboard"
    },
    {
        "comment": "/**\n * @namespace SaveSelection\n * @memberof Tools\n * @description saves session selection as URL\n */",
        "meta": {
            "filename": "cosi_namespaces.js",
            "lineno": 103,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "namespace",
        "name": "SaveSelection",
        "memberof": "Tools",
        "description": "saves session selection as URL",
        "scope": "static",
        "longname": "Tools.SaveSelection"
    },
    {
        "comment": "/**\n * @event StyleWMS#RadioTriggerStyleWMSOpenStyleWMS\n * @param {Object} model Layer model to be styled\n * @description Opens the Tool and sets the layer model. Event is triggered by clicking on the glyphicon in the layer tree.\n * @example Radio.trigger(\"StyleWMS\", \"openStyleWMS\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerStyleWMSOpenStyleWMS",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Layer model to be styled",
                "name": "model"
            }
        ],
        "description": "Opens the Tool and sets the layer model. Event is triggered by clicking on the glyphicon in the layer tree.",
        "examples": [
            "Radio.trigger(\"StyleWMS\", \"openStyleWMS\", model)"
        ],
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:RadioTriggerStyleWMSOpenStyleWMS",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#RadioTriggerStyleWmsResetParamsStyleWMS\n * @param {Object} model Layer model to be styled\n * @description Resets the stylewms params for legend\n * @example Radio.trigger(\"StyleWMS\", \"resetParamsStyleWMS\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerStyleWmsResetParamsStyleWMS",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Layer model to be styled",
                "name": "model"
            }
        ],
        "description": "Resets the stylewms params for legend",
        "examples": [
            "Radio.trigger(\"StyleWMS\", \"resetParamsStyleWMS\", model)"
        ],
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:RadioTriggerStyleWmsResetParamsStyleWMS",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#RadioTriggerStyleWmsUpdateParamsStyleWMS\n * @param {Object[]} attributes -\n * @description Sets the style wms params for legend so that the legend can be updated\n * @example Radio.trigger(\"StyleWMS\", \"updateParamsStyleWMS\", attributes)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerStyleWmsUpdateParamsStyleWMS",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Object>"
                    ]
                },
                "description": "-",
                "name": "attributes"
            }
        ],
        "description": "Sets the style wms params for legend so that the legend can be updated",
        "examples": [
            "Radio.trigger(\"StyleWMS\", \"updateParamsStyleWMS\", attributes)"
        ],
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:RadioTriggerStyleWmsUpdateParamsStyleWMS",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#changeModel\n * @description Triggered when layer model to style changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeModel",
        "description": "Triggered when layer model to style changes",
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:changeModel",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#changeIsActive\n * @description Triggered when stylewms model gets activated\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 29,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsActive",
        "description": "Triggered when stylewms model gets activated",
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:changeIsActive",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#changeAttributeName\n * @description Triggered when attributeName changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeAttributeName",
        "description": "Triggered when attributeName changes",
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:changeAttributeName",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#changeNumberOfClasses\n * @description Triggered when numberOfClasses changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 39,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeNumberOfClasses",
        "description": "Triggered when numberOfClasses changes",
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:changeNumberOfClasses",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWMS#changeSetSld\n * @description Triggered when setSLD changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 44,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeSetSld",
        "description": "Triggered when setSLD changes",
        "memberof": "StyleWMS",
        "longname": "StyleWMS#event:changeSetSld",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event StyleWms#sync\n * @description Triggered when setSLD changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 49,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "sync",
        "description": "Triggered when setSLD changes",
        "memberof": "StyleWms",
        "longname": "StyleWms#event:sync",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Sidebar#changeIsVisible\n * @param {Backbone/Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Triggered when Model attribute \"isVisible\" has changed.\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsVisible",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone/Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Triggered when Model attribute \"isVisible\" has changed.",
        "memberof": "Sidebar",
        "longname": "Sidebar#event:changeIsVisible",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Sidebar#changeIsMobile\n * @param {Backbone/Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Triggered when Model attribute \"isMobile\" has changed.\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsMobile",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone/Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Triggered when Model attribute \"isMobile\" has changed.",
        "memberof": "Sidebar",
        "longname": "Sidebar#event:changeIsMobile",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Sidebar#addContent\n * @param {DOM} element The dom element that has to be added to the sidebar.\n * @description Triggered by Model when new content is available.\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 71,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "addContent",
        "params": [
            {
                "type": {
                    "names": [
                        "DOM"
                    ]
                },
                "description": "The dom element that has to be added to the sidebar.",
                "name": "element"
            }
        ],
        "description": "Triggered by Model when new content is available.",
        "memberof": "Sidebar",
        "longname": "Sidebar#event:addContent",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Sidebar#setWidth\n * @param {String} width Width of sidebar.\n * @description Triggered by Model when sidebar is toggled.\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 77,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "setWidth",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Width of sidebar.",
                "name": "width"
            }
        ],
        "description": "Triggered by Model when sidebar is toggled.",
        "memberof": "Sidebar",
        "longname": "Sidebar#event:setWidth",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Sidebar#RadioTriggerSidebarToggle\n * @param {Boolean} isVisible Flag if sidebar is now visible or not.\n * @param {String} [width=\"30%\"] The width of the sidebar.\n * @description Triggered by ToolModel that renders in sidebar.\n * @example Radio.trigger(\"Sidebar\", \"toggle\", isVisible, width)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 83,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSidebarToggle",
        "params": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "Flag if sidebar is now visible or not.",
                "name": "isVisible"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "defaultvalue": "\"30%\"",
                "description": "The width of the sidebar.",
                "name": "width"
            }
        ],
        "description": "Triggered by ToolModel that renders in sidebar.",
        "examples": [
            "Radio.trigger(\"Sidebar\", \"toggle\", isVisible, width)"
        ],
        "memberof": "Sidebar",
        "longname": "Sidebar#event:RadioTriggerSidebarToggle",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Sidebar#RadioTriggerSidebarAppend\n * @param {HTML} element The Element that has to be rendered in sidebar.\n * @description Triggered by ToolModel that renders in sidebar.\n * @example Radio.trigger(\"Sidebar\", \"append\", element)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 90,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSidebarAppend",
        "params": [
            {
                "type": {
                    "names": [
                        "HTML"
                    ]
                },
                "description": "The Element that has to be rendered in sidebar.",
                "name": "element"
            }
        ],
        "description": "Triggered by ToolModel that renders in sidebar.",
        "examples": [
            "Radio.trigger(\"Sidebar\", \"append\", element)"
        ],
        "memberof": "Sidebar",
        "longname": "Sidebar#event:RadioTriggerSidebarAppend",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Alerting#changePosition\n * @param {Backbone/Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Triggered when Model attribute position has changed.\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 99,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changePosition",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone/Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Triggered when Model attribute position has changed.",
        "memberof": "Alerting",
        "longname": "Alerting#event:changePosition",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Alerting#render\n * @description Triggered when View has to render.\n * @example this.trigger(\"render\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 106,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "render",
        "description": "Triggered when View has to render.",
        "examples": [
            "this.trigger(\"render\")"
        ],
        "memberof": "Alerting",
        "longname": "Alerting#event:render",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Alerting#RadioTriggerAlertAlert\n * @param {String/Object} alert The alert object or string needed to create the alert.\n * @example Radio.trigger(\"Alert\", \"alert\", alert)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 112,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerAlertAlert",
        "params": [
            {
                "type": {
                    "names": [
                        "String/Object"
                    ]
                },
                "description": "The alert object or string needed to create the alert.",
                "name": "alert"
            }
        ],
        "examples": [
            "Radio.trigger(\"Alert\", \"alert\", alert)"
        ],
        "memberof": "Alerting",
        "longname": "Alerting#event:RadioTriggerAlertAlert",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Alerting#RadioTriggerAlertAlertRemove\n * @example Radio.trigger(\"Alert\", \"alert:remove\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 118,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerAlertAlertRemove",
        "examples": [
            "Radio.trigger(\"Alert\", \"alert:remove\")"
        ],
        "memberof": "Alerting",
        "longname": "Alerting#event:RadioTriggerAlertAlertRemove",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Alerting#RadioTriggerAlertClosed\n * @param {String} id The id of the alert that has been closed.\n * @example Radio.trigger(\"Alert\", \"closed\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 123,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerAlertClosed",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the alert that has been closed.",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.trigger(\"Alert\", \"closed\", id)"
        ],
        "memberof": "Alerting",
        "longname": "Alerting#event:RadioTriggerAlertClosed",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Alerting#RadioTriggerAlertConfirmed\n * @param {String} id The id of the alert that has been confirmed.\n * @example Radio.trigger(\"Alert\", \"confirmed\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 129,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerAlertConfirmed",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The id of the alert that has been confirmed.",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.trigger(\"Alert\", \"confirmed\", id)"
        ],
        "memberof": "Alerting",
        "longname": "Alerting#event:RadioTriggerAlertConfirmed",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ClickCounter#RadioTriggerClickCounterToolChanged\n * @example Radio.trigger(\"ClickCounter\", \"toolChanged\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 138,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerClickCounterToolChanged",
        "examples": [
            "Radio.trigger(\"ClickCounter\", \"toolChanged\")"
        ],
        "memberof": "ClickCounter",
        "longname": "ClickCounter#event:RadioTriggerClickCounterToolChanged",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ClickCounter#RadioTriggerClickCounterCalcRoute\n * @example Radio.trigger(\"ClickCounter\", \"calcRoute\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 143,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerClickCounterCalcRoute",
        "examples": [
            "Radio.trigger(\"ClickCounter\", \"calcRoute\")"
        ],
        "memberof": "ClickCounter",
        "longname": "ClickCounter#event:RadioTriggerClickCounterCalcRoute",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ClickCounter#RadioTriggerClickCounterZoomChanged\n * @example Radio.trigger(\"ClickCounter\", \"zoomChanged\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 148,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerClickCounterZoomChanged",
        "examples": [
            "Radio.trigger(\"ClickCounter\", \"zoomChanged\")"
        ],
        "memberof": "ClickCounter",
        "longname": "ClickCounter#event:RadioTriggerClickCounterZoomChanged",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ClickCounter#RadioTriggerClickCounterLayerVisibleChanged\n * @example Radio.trigger(\"ClickCounter\", \"layerVisibleChanged\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 153,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerClickCounterLayerVisibleChanged",
        "examples": [
            "Radio.trigger(\"ClickCounter\", \"layerVisibleChanged\")"
        ],
        "memberof": "ClickCounter",
        "longname": "ClickCounter#event:RadioTriggerClickCounterLayerVisibleChanged",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ClickCounter#RadioTriggerClickCounterGfi\n * @example Radio.trigger(\"ClickCounter\", \"gfi\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 158,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerClickCounterGfi",
        "examples": [
            "Radio.trigger(\"ClickCounter\", \"gfi\")"
        ],
        "memberof": "ClickCounter",
        "longname": "ClickCounter#event:RadioTriggerClickCounterGfi",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Legend#RadioRequestLegendGetLegend\n * @param {layer} layer The layer, to which the legend should be returned.\n * @example Radio.request(\"Legend\", \"getLegend\", layer)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 166,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestLegendGetLegend",
        "params": [
            {
                "type": {
                    "names": [
                        "layer"
                    ]
                },
                "description": "The layer, to which the legend should be returned.",
                "name": "layer"
            }
        ],
        "examples": [
            "Radio.request(\"Legend\", \"getLegend\", layer)"
        ],
        "memberof": "Legend",
        "longname": "Legend#event:RadioRequestLegendGetLegend",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Legend#RadioRequestLegendGetLegendParams\n * @returns {Object} legendParams legendParams\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 172,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestLegendGetLegendParams",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "legendParams legendParams"
            }
        ],
        "memberof": "Legend",
        "longname": "Legend#event:RadioRequestLegendGetLegendParams",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Legend#RadioTriggerLegendSetLayerList\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 177,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerLegendSetLayerList",
        "description": "todo",
        "memberof": "Legend",
        "longname": "Legend#event:RadioTriggerLegendSetLayerList",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Legend#hide\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 182,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "hide",
        "description": "todo",
        "memberof": "Legend",
        "longname": "Legend#event:hide",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Legend#changeLegendParams\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 187,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeLegendParams",
        "description": "todo",
        "memberof": "Legend",
        "longname": "Legend#event:changeLegendParams",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Legend#changeParamsStyleWMSArray\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 192,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeParamsStyleWMSArray",
        "description": "todo",
        "memberof": "Legend",
        "longname": "Legend#event:changeParamsStyleWMSArray",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerRemoveItem\n * @example Radio.trigger(\"Parser\", \"removeItem\")\n * @description Event that removes an item from the layertree\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 200,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerRemoveItem",
        "examples": [
            "Radio.trigger(\"Parser\", \"removeItem\")"
        ],
        "description": "Event that removes an item from the layertree",
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerRemoveItem",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetItemsByAttributes\n * @param {object} attributes The Object that contains the attributes\n * @returns {Item[]} - Layer/Tool/Folder/control\n * @example Radio.request(\"Parser\", \"getItemsByAttributes\", attributes)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 206,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetItemsByAttributes",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "The Object that contains the attributes",
                "name": "attributes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Item>"
                    ]
                },
                "description": "- Layer/Tool/Folder/control"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getItemsByAttributes\", attributes)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetItemsByAttributes",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetItemByAttributes\n * @param {object} attributes The Object that contains the attributes\n * @returns {Item[]} - Layer/Tool/Folder/control\n * @example Radio.request(\"Parser\", \"getItemByAttributes\", attributes)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 212,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetItemByAttributes",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "The Object that contains the attributes",
                "name": "attributes"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Item>"
                    ]
                },
                "description": "- Layer/Tool/Folder/control"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getItemByAttributes\", attributes)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetItemByAttributes",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetTreeType\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getTreeType\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 218,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetTreeType",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getTreeType\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetTreeType",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetCategory\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getCategory\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 223,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetCategory",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getCategory\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetCategory",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetCategories\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getCategories\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 228,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetCategories",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getCategories\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetCategories",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserSetCategory\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"setCategory\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 234,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserSetCategory",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"setCategory\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserSetCategory",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetPortalConfig\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getPortalConfig\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 240,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetPortalConfig",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getPortalConfig\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetPortalConfig",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetItemsByMetaID\n * @param {*} metaID - todo\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getItemsByMetaID\", metaID)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 246,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetItemsByMetaID",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "metaID"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getItemsByMetaID\", metaID)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetItemsByMetaID",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetSnippetInfos\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getSnippetInfos\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 253,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetSnippetInfos",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getSnippetInfos\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetSnippetInfos",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioRequestParserGetInitVisibBaselayer\n * @returns {*} todo\n * @example Radio.request(\"Parser\", \"getInitVisibBaselayer\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 259,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestParserGetInitVisibBaselayer",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo"
            }
        ],
        "examples": [
            "Radio.request(\"Parser\", \"getInitVisibBaselayer\")"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioRequestParserGetInitVisibBaselayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParsersetCategory\n * @param {*} value -todo\n * @example Radio.trigger(\"Parser\", \"setCategory\", value)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 265,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParsersetCategory",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "value"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"setCategory\", value)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParsersetCategory",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddItem\n * @param {Object} obj - Item\n * @example Radio.trigger(\"Parser\", \"addItem\", obj)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 271,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddItem",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Item",
                "name": "obj"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addItem\", obj)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddItem",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddItemAtTop\n * @param {Object} obj - Item\n * @example Radio.trigger(\"Parser\", \"addItemAtTop\", obj)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 276,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddItemAtTop",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Item",
                "name": "obj"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addItemAtTop\", obj)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddItemAtTop",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddItems\n * @param {array} objs Array of related objects, e.g. categories in Themenbaum\n * @param {object} attr Layerobject\n * @example Radio.trigger(\"Parser\", \"addItems\", objs, attr)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 282,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddItems",
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "Array of related objects, e.g. categories in Themenbaum",
                "name": "objs"
            },
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "Layerobject",
                "name": "attr"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addItems\", objs, attr)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddItems",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddFolder\n * @param {*} name - todo\n * @param {*} id - todo\n * @param {*} parentId - todo\n * @param {*} level - todo\n * @param {*} isExpanded - todo\n * @example Radio.trigger(\"Parser\", \"addFolder\", name, id, parentId, level, isExpanded)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 289,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddFolder",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "parentId"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "level"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "isExpanded"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addFolder\", name, id, parentId, level, isExpanded)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddFolder",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddLayer\n * @param {*} name - todo\n * @param {*} id - todo\n * @param {*} parentId - todo\n * @param {*} level - todo\n * @param {*} layers - todo\n * @param {*} url - todo\n * @param {*} version - todo\n * @returns {void}\n * @example Radio.trigger(\"Parser\", \"addLayer\", name, id, parentId, level, layers, url, version)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 299,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddLayer",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "name"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "parentId"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "level"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "layers"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "url"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "todo",
                "name": "version"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "void"
                    ]
                }
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addLayer\", name, id, parentId, level, layers, url, version)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddGDILayer\n * @param {Object} values - includes {name, id, parentId, level, layers, url, version, gfiAttributes, datasets, isJustAdded}\n * @example Radio.trigger(\"Parser\", \"addGDILayer\", values)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 312,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddGDILayer",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "includes {name, id, parentId, level, layers, url, version, gfiAttributes, datasets, isJustAdded}",
                "name": "values"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addGDILayer\", values)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddGDILayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserAddGeoJSONLayer\n * @param {String} layerName - The name of the layer (can be selected alphanumerically)\n * @param {String} layerId - The Id of the layers (can be selected alphanumerically, but should be unique)\n * @param {String} geojson - A valid GeoJson. If no crs is defined in the Json, EPSG:4326 is assumed..\n * @example Radio.trigger(\"Parser\", \"addGeoJSONLayer\", name, id, geojson)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 318,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserAddGeoJSONLayer",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The name of the layer (can be selected alphanumerically)",
                "name": "layerName"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The Id of the layers (can be selected alphanumerically, but should be unique)",
                "name": "layerId"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "A valid GeoJson. If no crs is defined in the Json, EPSG:4326 is assumed..",
                "name": "geojson"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"addGeoJSONLayer\", name, id, geojson)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserAddGeoJSONLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#RadioTriggerParserRemoveItem\n * @description Event that removes an item from the layertree\n * @param {String} id - id from item that be removed\n * @example Radio.trigger(\"Parser\", \"removeItem\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 326,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerParserRemoveItem",
        "description": "Event that removes an item from the layertree",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "id from item that be removed",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.trigger(\"Parser\", \"removeItem\", id)"
        ],
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:RadioTriggerParserRemoveItem",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ConfigLoader#ChangeCategory\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 333,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeCategory",
        "description": "todo",
        "memberof": "Core.ConfigLoader",
        "longname": "Core.ConfigLoader#event:ChangeCategory",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ContactModel#changeIsActive\n * @description Is fired when attribute isActive changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 341,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsActive",
        "description": "Is fired when attribute isActive changes",
        "memberof": "ContactModel",
        "longname": "ContactModel#event:changeIsActive",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event ContactModel#changeInvalid\n * @description Is fired when attribute isActive changes\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 346,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeInvalid",
        "description": "Is fired when attribute isActive changes",
        "memberof": "ContactModel",
        "longname": "ContactModel#event:changeInvalid",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event RestReader#RadioRequestRestReaderGetServiceById\n * @param {String} id Id of RestService\n * @example Radio.trigger(\"RestReader\", \"getServiceById\", id)\n * @description Event that returns the config.json of the portal\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 354,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestRestReaderGetServiceById",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Id of RestService",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.trigger(\"RestReader\", \"getServiceById\", id)"
        ],
        "description": "Event that returns the config.json of the portal",
        "memberof": "RestReader",
        "longname": "RestReader#event:RadioRequestRestReaderGetServiceById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#changeIsSelected\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute isSelected has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 363,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsSelected",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Fired if attribute isSelected has changed",
        "memberof": "Layer",
        "longname": "Layer#event:changeIsSelected",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#changeIsVisibleInMap\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute isVisibleInMap has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 370,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsVisibleInMap",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Fired if attribute isVisibleInMap has changed",
        "memberof": "Layer",
        "longname": "Layer#event:changeIsVisibleInMap",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#changeTransparency\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute transparency has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 377,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeTransparency",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Fired if attribute transparency has changed",
        "memberof": "Layer",
        "longname": "Layer#event:changeTransparency",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#changeIsSettingVisible\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute isSettingVisible has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 384,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsSettingVisible",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Fired if attribute isSettingVisible has changed",
        "memberof": "Layer",
        "longname": "Layer#event:changeIsSettingVisible",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#changeIsVisibleInTree\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute isVisibleInTree has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 391,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsVisibleInTree",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Fired if attribute isVisibleInTree has changed",
        "memberof": "Layer",
        "longname": "Layer#event:changeIsVisibleInTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#changeIsOutOfRange\n * @param {Backbone.Model} model The model whose attribute hat changed.\n * @param {Boolean} value The attribute value that has changed.\n * @description Fired if attribute isOutOfRange has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 398,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "changeIsOutOfRange",
        "params": [
            {
                "type": {
                    "names": [
                        "Backbone.Model"
                    ]
                },
                "description": "The model whose attribute hat changed.",
                "name": "model"
            },
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "The attribute value that has changed.",
                "name": "value"
            }
        ],
        "description": "Fired if attribute isOutOfRange has changed",
        "memberof": "Layer",
        "longname": "Layer#event:changeIsOutOfRange",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#RadioTriggerLayerUpdateLayerInfo\n * @param {String} name The name of the layer.\n * @example Radio.trigger(\"Layer\", \"updateLayerInfo\", name)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 405,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerLayerUpdateLayerInfo",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "The name of the layer.",
                "name": "name"
            }
        ],
        "examples": [
            "Radio.trigger(\"Layer\", \"updateLayerInfo\", name)"
        ],
        "memberof": "Layer",
        "longname": "Layer#event:RadioTriggerLayerUpdateLayerInfo",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#RadioTriggerLayerSetLayerInfoChecked\n * @param {Boolean} value Flag that signs that the layer informations has been checked.\n * @example Radio.trigger(\"Layer\", \"setLayerInfoChecked\", value)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 411,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerLayerSetLayerInfoChecked",
        "params": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "Flag that signs that the layer informations has been checked.",
                "name": "value"
            }
        ],
        "examples": [
            "Radio.trigger(\"Layer\", \"setLayerInfoChecked\", value)"
        ],
        "memberof": "Layer",
        "longname": "Layer#event:RadioTriggerLayerSetLayerInfoChecked",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#RadioTriggerVectorLayerFeaturesLoaded\n * @param {String} id Id of vector layer.\n * @param {ol/Feature[]} features Features that have been loaded.\n * @example Radio.trigger(\"VectorLayer\", \"featuresLoaded\", id, features)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 417,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerVectorLayerFeaturesLoaded",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Id of vector layer.",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "Array.<ol/Feature>"
                    ]
                },
                "description": "Features that have been loaded.",
                "name": "features"
            }
        ],
        "examples": [
            "Radio.trigger(\"VectorLayer\", \"featuresLoaded\", id, features)"
        ],
        "memberof": "Layer",
        "longname": "Layer#event:RadioTriggerVectorLayerFeaturesLoaded",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#RadioTriggerVectorLayerFeatureUpdated\n * @param {String} id Id of vector layer.\n * @param {ol/Feature[]} features Features that have been loaded.\n * @example Radio.trigger(\"VectorLayer\", \"featureUpdated\", id, features)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 424,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerVectorLayerFeatureUpdated",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Id of vector layer.",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "Array.<ol/Feature>"
                    ]
                },
                "description": "Features that have been loaded.",
                "name": "features"
            }
        ],
        "examples": [
            "Radio.trigger(\"VectorLayer\", \"featureUpdated\", id, features)"
        ],
        "memberof": "Layer",
        "longname": "Layer#event:RadioTriggerVectorLayerFeatureUpdated",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#RadioTriggerVectorLayerResetFeatures\n * @description Triggers an event with the features that are shown. Used for updates in heatmap after filter.\n * @param {String} id Id of vector layer.\n * @param {ol/Feature[]} features Features that are visible.\n * @example Radio.trigger(\"VectorLayer\", \"resetFeatures\", id, features)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 431,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerVectorLayerResetFeatures",
        "description": "Triggers an event with the features that are shown. Used for updates in heatmap after filter.",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Id of vector layer.",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "Array.<ol/Feature>"
                    ]
                },
                "description": "Features that are visible.",
                "name": "features"
            }
        ],
        "examples": [
            "Radio.trigger(\"VectorLayer\", \"resetFeatures\", id, features)"
        ],
        "memberof": "Layer",
        "longname": "Layer#event:RadioTriggerVectorLayerResetFeatures",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Layer#RadioRequestVectorLayerGetFeatures\n * @param {String} id Id of vector layer.\n * @example Radio.request(\"VectorLayer\", \"getFeatures\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 439,
            "columnno": 1,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestVectorLayerGetFeatures",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Id of vector layer.",
                "name": "id"
            }
        ],
        "examples": [
            "Radio.request(\"VectorLayer\", \"getFeatures\", id)"
        ],
        "memberof": "Layer",
        "longname": "Layer#event:RadioRequestVectorLayerGetFeatures",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapChange\n * @param {String} mode Mode of the map.\n * @description Event that gets fired when the map mode (\"2D\" / \"3D\", /\"Oblique\") has changed.\n * @example Radio.trigger(\"Map\", \"change\", mode)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 447,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapChange",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Mode of the map.",
                "name": "mode"
            }
        ],
        "description": "Event that gets fired when the map mode (\"2D\" / \"3D\", /\"Oblique\") has changed.",
        "examples": [
            "Radio.trigger(\"Map\", \"change\", mode)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapChange",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapUpdateSize\n * @description Event that forces the map to update its size.\n * @example Radio.trigger(\"Map\", \"updateSize\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 454,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapUpdateSize",
        "description": "Event that forces the map to update its size.",
        "examples": [
            "Radio.trigger(\"Map\", \"updateSize\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapUpdateSize",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapSetLayerToIndex\n * @description Sets layer to given index\n * @param {ol.Layer} layer Layer to set to new index\n * @param {integer} [index=0] new index\n * @example Radio.trigger(\"Map\", \"setLayerToIndex\", layer, index)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 460,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapSetLayerToIndex",
        "description": "Sets layer to given index",
        "params": [
            {
                "type": {
                    "names": [
                        "ol.Layer"
                    ]
                },
                "description": "Layer to set to new index",
                "name": "layer"
            },
            {
                "type": {
                    "names": [
                        "integer"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "new index",
                "name": "index"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"setLayerToIndex\", layer, index)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapSetLayerToIndex",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddLayer\n * @description Adds layer to map\n * @param {Object} layer Layer to add to map\n * @example Radio.trigger(\"Map\", \"addLayer\", layer)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 468,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddLayer",
        "description": "Adds layer to map",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Layer to add to map",
                "name": "layer"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"addLayer\", layer)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddLayerToIndex\n * @description Adds layer to given index\n * @param {Array} array Array consisting of the ol/layer and the given index. [layer, index]\n * @example Radio.trigger(\"Map\", \"addLayerToIndex\", array)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 475,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddLayerToIndex",
        "description": "Adds layer to given index",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array consisting of the ol/layer and the given index. [layer, index]",
                "name": "array"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"addLayerToIndex\", array)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddLayerToIndex",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetMapMode\n * @description Adds layer to given index\n * @returns {string} - The mode of the map. Value can be \"2D\" or \"3D\"\n * @example Radio.request(\"Map\", \"getMapMode\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 482,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetMapMode",
        "description": "Adds layer to given index",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "- The mode of the map. Value can be \"2D\" or \"3D\""
            }
        ],
        "examples": [
            "Radio.request(\"Map\", \"getMapMode\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetMapMode",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapCreateLayerIfNotExists\n * @description Creates a layer if it does not exist\n * @returns {Object} - The newly created layer\n * @example Radio.request(\"Map\", \"createLayerIfNotExists\", \"newLayerName\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 489,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapCreateLayerIfNotExists",
        "description": "Creates a layer if it does not exist",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "- The newly created layer"
            }
        ],
        "examples": [
            "Radio.request(\"Map\", \"createLayerIfNotExists\", \"newLayerName\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapCreateLayerIfNotExists",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetMap\n * @returns {ol/map} - The Openlayers Map.\n * @example Radio.request(\"Map\", \"getMap\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 496,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetMap",
        "returns": [
            {
                "type": {
                    "names": [
                        "ol/map"
                    ]
                },
                "description": "- The Openlayers Map."
            }
        ],
        "examples": [
            "Radio.request(\"Map\", \"getMap\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetMap",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetSize\n * @returns {number} size of the map\n * @example Radio.request(\"Map\", \"getSize\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 502,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetSize",
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "size of the map"
            }
        ],
        "examples": [
            "Radio.request(\"Map\", \"getSize\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetSize",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddControl\n * @param {Object} control Control to be added to map.\n * @example Radio.trigger(\"Map\", \"addControl\", control)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 508,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddControl",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Control to be added to map.",
                "name": "control"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"addControl\", control)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddControl",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapSetGFIParams\n * @param {Object} control Control to be added to map.\n * @example Radio.trigger(\"Map\", \"addControl\", control)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 514,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapSetGFIParams",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Control to be added to map.",
                "name": "control"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"addControl\", control)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapSetGFIParams",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddOverlay\n * @param {ol/overlay} overlay Overlay to be added to map.\n * @example Radio.trigger(\"Map\", \"addOverlay\", overlay)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 520,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddOverlay",
        "params": [
            {
                "type": {
                    "names": [
                        "ol/overlay"
                    ]
                },
                "description": "Overlay to be added to map.",
                "name": "overlay"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"addOverlay\", overlay)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddOverlay",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRemoveOverlay\n * @param {ol/overlay} overlay Overlay to be removed from map.\n * @example Radio.trigger(\"Map\", \"removeOverlay\", overlay)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 526,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRemoveOverlay",
        "params": [
            {
                "type": {
                    "names": [
                        "ol/overlay"
                    ]
                },
                "description": "Overlay to be removed from map.",
                "name": "overlay"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"removeOverlay\", overlay)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRemoveOverlay",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRemoveControl\n * @param {*} mapControl Control to be removed from map.\n * @example Radio.trigger(\"Map\", \"removeControl\", mapControl)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 532,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRemoveControl",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Control to be removed from map.",
                "name": "mapControl"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"removeControl\", mapControl)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRemoveControl",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapZoomToExtent\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 538,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapZoomToExtent",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapZoomToExtent",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRender\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 542,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRender",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRender",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapIsReady\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 546,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapIsReady",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapIsReady",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetLayers\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 551,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetLayers",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetLayers",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetWGS84MapSizeBBOX\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 556,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetWGS84MapSizeBBOX",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetWGS84MapSizeBBOX",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetFeaturesAtPixel\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 561,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetFeaturesAtPixel",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetFeaturesAtPixel",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadiotriggerMapCameraChanged\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 566,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadiotriggerMapCameraChanged",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadiotriggerMapCameraChanged",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapBeforeChange\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 571,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapBeforeChange",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapBeforeChange",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetMap3d\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 576,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetMap3d",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetMap3d",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapGetFeatures3dAtPosition\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 581,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapGetFeatures3dAtPosition",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapGetFeatures3dAtPosition",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddLayerOnTop\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 586,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddLayerOnTop",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddLayerOnTop",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRemoveLayer\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 591,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRemoveLayer",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRemoveLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRemoveLoadingLayer\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 596,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRemoveLoadingLayer",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRemoveLoadingLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddLoadingLayer\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 601,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddLoadingLayer",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddLoadingLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapSetBBox\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 606,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapSetBBox",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapSetBBox",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapZoomToFilteredFeatures\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 611,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapZoomToFilteredFeatures",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapZoomToFilteredFeatures",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapUnregisterListener\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 616,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapUnregisterListener",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapUnregisterListener",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapSetShadowTime\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 621,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapSetShadowTime",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapSetShadowTime",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapClickedWindowPosition\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 626,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapClickedWindowPosition",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapClickedWindowPosition",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapRegisterListener\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 631,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapRegisterListener",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapRegisterListener",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#MapChangeVectorLayer\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 636,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "MapChangeVectorLayer",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:MapChangeVectorLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRegisterListener\n * @param {String | Object} event Event to be registered\n * @param {Function} callback - The Callback Function\n * @param {Object} context -\n * @example Radio.trigger(\"Map\", \"RegisterListener\", event, callback, context)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 641,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRegisterListener",
        "params": [
            {
                "type": {
                    "names": [
                        "String",
                        "Object"
                    ]
                },
                "description": "Event to be registered",
                "name": "event"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The Callback Function",
                "name": "callback"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "-",
                "name": "context"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"RegisterListener\", event, callback, context)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRegisterListener",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapAddInteraction\n * @description Adds an interaction to the map (e.g. draw)\n * @param {Object} interaction Interaction to be added to map.\n * @example Radio.trigger(\"Map\", \"addInteraction\", interaction)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 649,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapAddInteraction",
        "description": "Adds an interaction to the map (e.g. draw)",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Interaction to be added to map.",
                "name": "interaction"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"addInteraction\", interaction)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapAddInteraction",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRemoveInteraction\n * @description Removes an interaction from the map (e.g. draw)\n * @param {Object} interaction Interaction to be removed from the map.\n * @example Radio.trigger(\"Map\", \"removeInteraction\", interaction)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 656,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRemoveInteraction",
        "description": "Removes an interaction from the map (e.g. draw)",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Interaction to be removed from the map.",
                "name": "interaction"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"removeInteraction\", interaction)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRemoveInteraction",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapUpdateSize\n * @description Event fires if map size is updated\n * @param {Object} caller todo!\n * @example Radio.trigger(\"Map\", \"updateSize\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 663,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapUpdateSize",
        "description": "Event fires if map size is updated",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "todo!",
                "name": "caller"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"updateSize\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapUpdateSize",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapRegisterListenerMovenend\n * @example Radio.trigger(\"Map\", \"registerListener\", \"moveend\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 670,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapRegisterListenerMovenend",
        "examples": [
            "Radio.trigger(\"Map\", \"registerListener\", \"moveend\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapRegisterListenerMovenend",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapIsMap3d\n * @description Event that gets fired when the map is in \"3D\" mode\n * @example Radio.request(\"Map\", \"isMap3d\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 675,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapIsMap3d",
        "description": "Event that gets fired when the map is in \"3D\" mode",
        "examples": [
            "Radio.request(\"Map\", \"isMap3d\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapIsMap3d",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapActivateMap3d\n * @description Event that gets fired when the map is activated to \"3D\" mode\n * @example Radio.trigger(\"Map\", \"activateMap3d\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 681,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapActivateMap3d",
        "description": "Event that gets fired when the map is activated to \"3D\" mode",
        "examples": [
            "Radio.trigger(\"Map\", \"activateMap3d\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapActivateMap3d",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapDeactivateMap3d\n * @description Event that gets fired when the map is deactivated from \"3D\" mode\n * @example Radio.trigger(\"Map\", \"deactivateMap3d\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 687,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapDeactivateMap3d",
        "description": "Event that gets fired when the map is deactivated from \"3D\" mode",
        "examples": [
            "Radio.trigger(\"Map\", \"deactivateMap3d\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapDeactivateMap3d",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerSetShadowTime\n * @description Sets the time of the shadows in 3D mode\n * @param {Cesium.JulianDate} Date to set\n * @example Radio.trigger(\"Map\", \"setShadowTime\", julianDate);\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 693,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSetShadowTime",
        "description": "Sets the time of the shadows in 3D mode",
        "params": [
            {
                "type": {
                    "names": [
                        "Cesium.JulianDate"
                    ]
                },
                "description": "to set",
                "name": "Date"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"setShadowTime\", julianDate);"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerSetShadowTime",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestIsMap3d\n * @description Event that gets the state of map mode (2D or 3D)\n * @example Radio.request(\"Map\", \"isMap3d\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 700,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestIsMap3d",
        "description": "Event that gets the state of map mode (2D or 3D)",
        "examples": [
            "Radio.request(\"Map\", \"isMap3d\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestIsMap3d",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestGetMap3d\n * @description Event that gets the map3D as an object\n * @example Radio.request(\"Map\", \"getMap3d\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 706,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestGetMap3d",
        "description": "Event that gets the map3D as an object",
        "examples": [
            "Radio.request(\"Map\", \"getMap3d\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestGetMap3d",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapSetCameraParameter\n * @description Triggers to set the cesium camera position\n * @param {object} cameraParameter viewpoint for ol.cesium\n * @example Radio.trigger(\"Map\", \"setCameraParameter\", cameraParameter);\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 712,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapSetCameraParameter",
        "description": "Triggers to set the cesium camera position",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "viewpoint for ol.cesium",
                "name": "cameraParameter"
            }
        ],
        "examples": [
            "Radio.trigger(\"Map\", \"setCameraParameter\", cameraParameter);"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapSetCameraParameter",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewChangedOptions\n * @param {Object} options Options of mapview status\n * @description Event that gets fired when the map view options have changed. The options are scale, center, zoomLevel\n * @example Radio.trigger(\"MapView\", \"changedOptions\", options)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 721,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewChangedOptions",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Options of mapview status",
                "name": "options"
            }
        ],
        "description": "Event that gets fired when the map view options have changed. The options are scale, center, zoomLevel",
        "examples": [
            "Radio.trigger(\"MapView\", \"changedOptions\", options)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewChangedOptions",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetOptions\n * @description Event that gets the map view options. The options are scale, center, zoomLevel\n * @example Radio.Request(\"MapView\", \"getOptions\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 728,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetOptions",
        "description": "Event that gets the map view options. The options are scale, center, zoomLevel",
        "examples": [
            "Radio.Request(\"MapView\", \"getOptions\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetOptions",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetCenter\n * @description Event that gets the center of the map view\n * @example Radio.Request(\"MapView\", \"getCenter\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 734,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetCenter",
        "description": "Event that gets the center of the map view",
        "examples": [
            "Radio.Request(\"MapView\", \"getCenter\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetCenter",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetResoByScale\n * @param {String} scale Options of mapview status\n * @description Event that gets the resolution depending on the map scale\n * @example Radio.trigger(\"MapView\", \"getResoByScale\", scale)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 740,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetResoByScale",
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Options of mapview status",
                "name": "scale"
            }
        ],
        "description": "Event that gets the resolution depending on the map scale",
        "examples": [
            "Radio.trigger(\"MapView\", \"getResoByScale\", scale)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetResoByScale",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetProjection\n * @description Event that returns the map projection\n * @returns {object} Projection of type ol/proj\n * @example Radio.request(\"MapView\", \"getProjection\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 747,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetProjection",
        "description": "Event that returns the map projection",
        "returns": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "Projection of type ol/proj"
            }
        ],
        "examples": [
            "Radio.request(\"MapView\", \"getProjection\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetProjection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewSetScale\n * @description Event that sets the scale of the map view\n * @example Radio.trigger(\"MapView\", \"setScale\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 754,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewSetScale",
        "description": "Event that sets the scale of the map view",
        "examples": [
            "Radio.trigger(\"MapView\", \"setScale\", model)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewSetScale",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewSetConstrainedResolution\n * @description Event that sets the constrained resolution of the map view\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 760,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewSetConstrainedResolution",
        "description": "Event that sets the constrained resolution of the map view",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewSetConstrainedResolution",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewSetCenter\n * @description Event that sets the center of the map view\n * @example Radio.trigger(\"MapView\", \"setCenter\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 765,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewSetCenter",
        "description": "Event that sets the center of the map view",
        "examples": [
            "Radio.trigger(\"MapView\", \"setCenter\", model)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewSetCenter",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewSetZoomLevelUp\n * @description Event that sets the zoom-level one counter up\n * @example Radio.trigger(\"MapView\", \"setZoomLevelUp\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 771,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewSetZoomLevelUp",
        "description": "Event that sets the zoom-level one counter up",
        "examples": [
            "Radio.trigger(\"MapView\", \"setZoomLevelUp\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewSetZoomLevelUp",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewSetZoomLevelDown\n * @description Event that sets the zoom-level one counter down\n * @example Radio.trigger(\"MapView\", \"setZoomLevelDown\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 777,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewSetZoomLevelDown",
        "description": "Event that sets the zoom-level one counter down",
        "examples": [
            "Radio.trigger(\"MapView\", \"setZoomLevelDown\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewSetZoomLevelDown",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewResetView\n * @description Resets the map view\n * @example Radio.trigger(\"MapView\", \"resetVIew\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 783,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewResetView",
        "description": "Resets the map view",
        "examples": [
            "Radio.trigger(\"MapView\", \"resetVIew\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewResetView",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetResolutions\n * @returns {object[]} - Returns the resolutions of the map\n * @example Radio.trigger(\"MapView\", \"getResolutions\");\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 789,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetResolutions",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<object>"
                    ]
                },
                "description": "- Returns the resolutions of the map"
            }
        ],
        "examples": [
            "Radio.trigger(\"MapView\", \"getResolutions\");"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetResolutions",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewToggleBackground\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 795,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewToggleBackground",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewToggleBackground",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetCurrentExtent\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 800,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetCurrentExtent",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetCurrentExtent",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetProjection\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 805,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetProjection",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetProjection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetScales\n * @description Event gets the scale\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 810,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetScales",
        "description": "Event gets the scale",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetScales",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestMapViewGetZoomLevel\n * @description Event gets the zoom-level\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 815,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestMapViewGetZoomLevel",
        "description": "Event gets the zoom-level",
        "memberof": "Core",
        "longname": "Core#event:RadioRequestMapViewGetZoomLevel",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewChangedCenter\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 820,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewChangedCenter",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewChangedCenter",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerMapViewChangedZoomLevel\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 825,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerMapViewChangedZoomLevel",
        "description": "todo",
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerMapViewChangedZoomLevel",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event LayerInformation#RadioTriggerLayerInformationAdd\n * @param {Object} options Options of mapview status\n * @example Radio.trigger(\"LayerInformation\", \"add\", options)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 832,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerLayerInformationAdd",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Options of mapview status",
                "name": "options"
            }
        ],
        "examples": [
            "Radio.trigger(\"LayerInformation\", \"add\", options)"
        ],
        "memberof": "LayerInformation",
        "longname": "LayerInformation#event:RadioTriggerLayerInformationAdd",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event LayerInformation#RadioTriggerLayerInformationSync\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 838,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerLayerInformationSync",
        "description": "todo",
        "memberof": "LayerInformation",
        "longname": "LayerInformation#event:RadioTriggerLayerInformationSync",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event LayerInformation#RadioTriggerLayerInformationRemoveView\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 843,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerLayerInformationRemoveView",
        "description": "todo",
        "memberof": "LayerInformation",
        "longname": "LayerInformation#event:RadioTriggerLayerInformationRemoveView",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event LayerInformation#RadioTriggerSetIsVisibleToFalse\n * @description todo\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 848,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerSetIsVisibleToFalse",
        "description": "todo",
        "memberof": "LayerInformation",
        "longname": "LayerInformation#event:RadioTriggerSetIsVisibleToFalse",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerObliqueMapRegisterLayer\n * @param {ObliqueLayer} layer ObliqueLayer.\n * @example Radio.trigger(\"ObliqueMap\", \"registerLayer\", layer)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 856,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerObliqueMapRegisterLayer",
        "params": [
            {
                "type": {
                    "names": [
                        "ObliqueLayer"
                    ]
                },
                "description": "ObliqueLayer.",
                "name": "layer"
            }
        ],
        "examples": [
            "Radio.trigger(\"ObliqueMap\", \"registerLayer\", layer)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerObliqueMapRegisterLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioRequestObliqueMapIsActive\n * @returns {Boolean} - Flag if ObliqueMap is active.\n * @example Radio.request(\"ObliqueMap\", \"isActive\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 862,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestObliqueMapIsActive",
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "- Flag if ObliqueMap is active."
            }
        ],
        "examples": [
            "Radio.request(\"ObliqueMap\", \"isActive\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioRequestObliqueMapIsActive",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerObliqueMapActivateLayer\n * @param {ObliqueLayer} layer ObliqueLayer.\n * @example Radio.trigger(\"ObliqueMap\", \"activateLayer\", layer)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 868,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerObliqueMapActivateLayer",
        "params": [
            {
                "type": {
                    "names": [
                        "ObliqueLayer"
                    ]
                },
                "description": "ObliqueLayer.",
                "name": "layer"
            }
        ],
        "examples": [
            "Radio.trigger(\"ObliqueMap\", \"activateLayer\", layer)"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerObliqueMapActivateLayer",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerObliqueMapDeactivate\n * @param {Boolean} - Flag if ObliqueMap is Deactivated\n * @example Radio.trigger(\"ObliqueMap\", \"deactivate\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 874,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerObliqueMapDeactivate",
        "params": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "Flag if ObliqueMap is Deactivated"
            }
        ],
        "examples": [
            "Radio.trigger(\"ObliqueMap\", \"deactivate\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerObliqueMapDeactivate",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core#RadioTriggerObliqueMapActivate\n * @param {Boolean} - Flag if ObliqueMap is activated\n * @example Radio.trigger(\"ObliqueMap\", \"activate\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 880,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerObliqueMapActivate",
        "params": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "Flag if ObliqueMap is activated"
            }
        ],
        "examples": [
            "Radio.trigger(\"ObliqueMap\", \"activate\")"
        ],
        "memberof": "Core",
        "longname": "Core#event:RadioTriggerObliqueMapActivate",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioRequestModelListGetCollection\n * @description Returns itself\n * @example Radio.request(\"ModelList\", \"getCollection\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 887,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestModelListGetCollection",
        "description": "Returns itself",
        "examples": [
            "Radio.request(\"ModelList\", \"getCollection\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioRequestModelListGetCollection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioRequestModelListGetModelsByAttributes\n * @param {Object} attributes Attributes used to find models to be returned\n * @description Returns the models that match the given attributes in an array, if none found the array is empty\n * @example Radio.request(\"ModelList\", \"getModelsByAttributes\", attributes)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 893,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestModelListGetModelsByAttributes",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Attributes used to find models to be returned",
                "name": "attributes"
            }
        ],
        "description": "Returns the models that match the given attributes in an array, if none found the array is empty",
        "examples": [
            "Radio.request(\"ModelList\", \"getModelsByAttributes\", attributes)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioRequestModelListGetModelsByAttributes",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioRequestModelListGetModelByAttributes\n * @param {Object} attributes Attributes used to find model to be returned\n * @description Returns the first model that matches the given attributes. If model cannot be found, the function look for a group layer model containing the attributes\n * @example Radio.request(\"ModelList\", \"getModelByAttributes\", attributes)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 900,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioRequestModelListGetModelByAttributes",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Attributes used to find model to be returned",
                "name": "attributes"
            }
        ],
        "description": "Returns the first model that matches the given attributes. If model cannot be found, the function look for a group layer model containing the attributes",
        "examples": [
            "Radio.request(\"ModelList\", \"getModelByAttributes\", attributes)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioRequestModelListGetModelByAttributes",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListSetModelAttributesById\n * @description See {@link List#setModelAttributesById}\n * @example Radio.trigger(\"ModelList\", \"setModelAttributesById\", id, attrs)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 907,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListSetModelAttributesById",
        "description": "See {@link List#setModelAttributesById}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"setModelAttributesById\", id, attrs)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListSetModelAttributesById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListShowAllFeatures\n * @description See {@link List#showAllFeatures}\n * @example Radio.trigger(\"ModelList\", \"showAllFeatures\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 913,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListShowAllFeatures",
        "description": "See {@link List#showAllFeatures}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"showAllFeatures\", id)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListShowAllFeatures",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListHideAllFeatures\n * @description See {@link List#hideAllFeatures}\n * @example Radio.trigger(\"ModelList\", \"hideAllFeatures\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 919,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListHideAllFeatures",
        "description": "See {@link List#hideAllFeatures}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"hideAllFeatures\", id)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListHideAllFeatures",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListShowFeaturesById\n * @description See {@link List#showFeaturesById}\n * @example Radio.trigger(\"ModelList\", \"showFeaturesById\", id, featureIds)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 925,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListShowFeaturesById",
        "description": "See {@link List#showFeaturesById}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"showFeaturesById\", id, featureIds)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListShowFeaturesById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListRemoveModelsByParentId\n * @description See {@link List#removeModelsByParentId}\n * @example Radio.trigger(\"ModelList\", \"removeModelsByParentId\", parentId)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 931,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListRemoveModelsByParentId",
        "description": "See {@link List#removeModelsByParentId}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"removeModelsByParentId\", parentId)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListRemoveModelsByParentId",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListRemoveModelsById\n * @description See {@link List#removeModelsById}\n * @example Radio.trigger(\"ModelList\", \"removeModelsByParentId\", id)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 937,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListRemoveModelsById",
        "description": "See {@link List#removeModelsById}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"removeModelsByParentId\", id)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListRemoveModelsById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListAddInitiallyNeededModels\n * @description See {@link List#addInitiallyNeededModels}\n * @example Radio.trigger(\"ModelList\", \"addInitiallyNeededModels\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 943,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListAddInitiallyNeededModels",
        "description": "See {@link List#addInitiallyNeededModels}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"addInitiallyNeededModels\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListAddInitiallyNeededModels",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListAddModelsByAttributes\n * @description See {@link List#addModelsByAttributes}\n * @example Radio.trigger(\"ModelList\", \"addModelsByAttributes\", attrs)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 949,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListAddModelsByAttributes",
        "description": "See {@link List#addModelsByAttributes}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"addModelsByAttributes\", attrs)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListAddModelsByAttributes",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListAddModelByAttributes\n * @description See {@link List#getModelsByAttributes}\n * @example Radio.trigger(\"ModelList\", \"getModelsByAttributes\", attrs)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 955,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListAddModelByAttributes",
        "description": "See {@link List#getModelsByAttributes}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"getModelsByAttributes\", attrs)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListAddModelByAttributes",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListReplaceModelById\n * @description See {@link List#replaceModelById}\n * @example Radio.trigger(\"ModelList\", \"replaceModelById\", id, model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 961,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListReplaceModelById",
        "description": "See {@link List#replaceModelById}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"replaceModelById\", id, model)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListReplaceModelById",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListSetIsSelectedOnChildLayers\n * @description See {@link List#setIsSelectedOnChildLayers}\n * @example Radio.trigger(\"ModelList\", \"setIsSelectedOnChildLayers\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 967,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListSetIsSelectedOnChildLayers",
        "description": "See {@link List#setIsSelectedOnChildLayers}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"setIsSelectedOnChildLayers\", model)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListSetIsSelectedOnChildLayers",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListSetIsSelectedOnParent\n * @description See {@link List#setIsSelectedOnParent}\n * @example Radio.trigger(\"ModelList\", \"setIsSelectedOnParent\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 973,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListSetIsSelectedOnParent",
        "description": "See {@link List#setIsSelectedOnParent}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"setIsSelectedOnParent\", model)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListSetIsSelectedOnParent",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListShowModelInTree\n * @description See {@link List#showModelInTree}\n * @example Radio.trigger(\"ModelList\", \"showModelInTree\", modelId)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 979,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListShowModelInTree",
        "description": "See {@link List#showModelInTree}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"showModelInTree\", modelId)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListShowModelInTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListCloseAllExpandedFolder\n * @description See {@link List#closeAllExpandedFolder}\n * @example Radio.trigger(\"ModelList\", \"closeAllExpandedFolder\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 985,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListCloseAllExpandedFolder",
        "description": "See {@link List#closeAllExpandedFolder}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"closeAllExpandedFolder\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListCloseAllExpandedFolder",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListSetAllDescendantsInvisible\n * @description See {@link List#setAllDescendantsInvisible}\n * @example Radio.trigger(\"ModelList\", \"setAllDescendantsInvisible\", parentId, isMobile)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 991,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListSetAllDescendantsInvisible",
        "description": "See {@link List#setAllDescendantsInvisible}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"setAllDescendantsInvisible\", parentId, isMobile)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListSetAllDescendantsInvisible",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListRenderTree\n * @example Radio.trigger(\"ModelList\", \"renderTree\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 997,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListRenderTree",
        "examples": [
            "Radio.trigger(\"ModelList\", \"renderTree\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListRenderTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RenderTree\n * @description Triggers \"renderTree\"\n * @example this.trigger(\"renderTree\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1002,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RenderTree",
        "description": "Triggers \"renderTree\"",
        "examples": [
            "this.trigger(\"renderTree\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RenderTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListToggleWfsCluster\n * @description See {@link List#toggleWfsCluster}\n * @example Radio.trigger(\"ModelList\", \"toggleWfsCluster\", value)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1008,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListToggleWfsCluster",
        "description": "See {@link List#toggleWfsCluster}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"toggleWfsCluster\", value)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListToggleWfsCluster",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListToggleDefaultTool\n * @description See {@link List#toggleDefaultTool}\n * @example Radio.trigger(\"ModelList\", \"toggleDefaultTool\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1014,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListToggleDefaultTool",
        "description": "See {@link List#toggleDefaultTool}",
        "examples": [
            "Radio.trigger(\"ModelList\", \"toggleDefaultTool\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListToggleDefaultTool",
        "scope": "instance"
    },
    {
        "comment": "/**\n* @event Core.ModelList#RadioTriggerModelListRefreshLightTree\n* @description Refreshes the light tree.\n* @example Radio.trigger(\"ModelList\", \"refreshLightTree\")\n*/",
        "meta": {
            "filename": "events.js",
            "lineno": 1020,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListRefreshLightTree",
        "description": "Refreshes the light tree.",
        "examples": [
            "Radio.trigger(\"ModelList\", \"refreshLightTree\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListRefreshLightTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListUpdateVisibleInMapList\n * @description Triggered when one item has a change in the attribute isVisibleInMap\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1026,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListUpdateVisibleInMapList",
        "description": "Triggered when one item has a change in the attribute isVisibleInMap",
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListUpdateVisibleInMapList",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#ChangeIsExpanded\n * @description Triggered when one item has a change in the attribute isExpaned\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1031,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeIsExpanded",
        "description": "Triggered when one item has a change in the attribute isExpaned",
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:ChangeIsExpanded",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#ChangeIsSelected\n * @description Triggered when one item has a change in the attribute IsSelected\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1036,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeIsSelected",
        "description": "Triggered when one item has a change in the attribute IsSelected",
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:ChangeIsSelected",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#ChangeTransparency\n * @description Triggered when one item has a change in the attribute transparency\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1041,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeTransparency",
        "description": "Triggered when one item has a change in the attribute transparency",
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:ChangeTransparency",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#ChangeSelectionIDX\n * @description Triggered when one item has a change in the attribute selectionIDX\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1046,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeSelectionIDX",
        "description": "Triggered when one item has a change in the attribute selectionIDX",
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:ChangeSelectionIDX",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#UpdateSelection\n * @description Triggered when selection was updated\n * @example this.trigger(\"updateSelection\", model)\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1051,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "UpdateSelection",
        "description": "Triggered when selection was updated",
        "examples": [
            "this.trigger(\"updateSelection\", model)"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:UpdateSelection",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#UpdateLightTree\n * @description Triggered when light tree was updated\n * @example this.trigger(\"updateLightTree\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1057,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "UpdateLightTree",
        "description": "Triggered when light tree was updated",
        "examples": [
            "this.trigger(\"updateLightTree\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:UpdateLightTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#ChangeSelectedList\n * @description Triggered when selected list has changed\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1063,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "ChangeSelectedList",
        "description": "Triggered when selected list has changed",
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:ChangeSelectedList",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#TraverseTree\n * @description Used for mobile\n * @example this.trigger(\"traverseTree\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1068,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "TraverseTree",
        "description": "Used for mobile",
        "examples": [
            "this.trigger(\"traverseTree\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:TraverseTree",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListUpdateVisibleInMapList\n * @example Radio.trigger(\"ModelList\", \"updateVisibleInMapList\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1074,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListUpdateVisibleInMapList",
        "examples": [
            "Radio.trigger(\"ModelList\", \"updateVisibleInMapList\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListUpdateVisibleInMapList",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @event Core.ModelList#RadioTriggerModelListUpdatedSelectedLayerList\n * @example Radio.trigger(\"ModelList\", \"updatedSelectedLayerList\")\n */",
        "meta": {
            "filename": "events.js",
            "lineno": 1079,
            "columnno": 0,
            "path": "/home/jowie/Desktop/CityScienceLab/CoSI/cosi-master/devtools/jsdoc",
            "code": {}
        },
        "kind": "event",
        "name": "RadioTriggerModelListUpdatedSelectedLayerList",
        "examples": [
            "Radio.trigger(\"ModelList\", \"updatedSelectedLayerList\")"
        ],
        "memberof": "Core.ModelList",
        "longname": "Core.ModelList#event:RadioTriggerModelListUpdatedSelectedLayerList",
        "scope": "instance"
    }
]